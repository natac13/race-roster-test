{"version":3,"sources":["main.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Object","defineProperty","value","$form","$el","country","val","console","log","find","hide","$","this","prop","show",2,"_interopRequireDefault","obj","__esModule","default","_checkCountry","_checkCountry2","_validateRules","_scroll","document","ready","$contactForm","$country","click","animate","scrollTop","attr","offset","top","on","validator","addMethod","element","regex","re","RegExp","test","validate","rules","name","required","email","address","postalCode","zipCode","messages","event","preventDefault","ajax","url","type","data","serialize","success","trigger","error","./checkCountry","./scroll","./validateRules",3,"scroll",4,"postal-code","zip-code"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nexports['default'] = function ($form, $el) {\n\n    var country = $el.val();\n    console.log(country);\n    if (country + '' == 'USA') {\n        $form.find('#postalWrapper').hide('slide', 600, function () {\n            $(this).find('#postal-code, #province').prop('disabled', true);\n            $form.find('#zipWrapper').show('size', 600, function () {\n                $(this).find('#zip-code, #state').prop('disabled', false);\n            });\n        });\n    }\n    if (country + '' == 'Canada') {\n        $form.find('#zipWrapper').hide('slide', 600, function () {\n            $(this).find('#zip-code, #state').prop('disabled', true);\n            $form.find('#postalWrapper').show('size', 600, function () {\n                $(this).find('#postal-code, #province').prop('disabled', false);\n            });\n        });\n    }\n};\n\nmodule.exports = exports['default'];\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _checkCountry = require('./checkCountry');\n\nvar _checkCountry2 = _interopRequireDefault(_checkCountry);\n\nvar _validateRules = require('./validateRules');\n\nvar _validateRules2 = _interopRequireDefault(_validateRules);\n\nvar _scroll = require('./scroll');\n\nvar _scroll2 = _interopRequireDefault(_scroll);\n\n$(document).ready(function () {\n    var $contactForm = $('#contact-info'),\n        $name = $contactForm.find('#name'),\n        $email = $contactForm.find('#email'),\n        $street = $contactForm.find('#address'),\n        $country = $contactForm.find('#country'),\n        $province = $contactForm.find('#province'),\n        $state = $contactForm.find('#state');\n\n    /*** smooth scrolling ***/\n    $('a').click(function () {\n        $('html, body').animate({\n            scrollTop: $($.attr(this, 'href')).offset().top\n        }, 1000);\n        return false;\n    });\n\n    /*** update form based on country selection ***/\n    $country.on('change', function () {\n        (0, _checkCountry2['default'])($contactForm, $(this));\n    });\n\n    /*** New Validations ***/\n    $.validator.addMethod('regex', function (value, element, regex) {\n        var re = new RegExp(regex);\n        return re.test(value);\n    });\n\n    /*** Valid fields ***/\n    $contactForm.validate({\n        rules: {\n            \"name\": {\n                required: true\n            },\n            \"email\": {\n                required: true,\n                email: true\n            },\n            \"address\": {\n                regex: /^(:?\\d{2,}-?)?\\d{2,}\\s[a-z]+\\s[a-z]+\\.?$/i\n            },\n            \"postalCode\": {\n                regex: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJKLMNPRSTVWXYZ]( )?\\d[ABCEGHJKLMNPRSTVWXYZ]\\d$/i\n            },\n            \"zipCode\": {\n                regex: /^\\d{5}$/\n            }\n        },\n        messages: {\n            \"name\": {\n                required: \"Please enter your name, as it is required to submit.\"\n            },\n            \"email\": {\n                required: \"Please enter a valid email address; also required for submission.\"\n            },\n            \"address\": {\n                regex: \"Address should have number first then street name. If apartment then add unit number to beginning of street number followed by '-' with no single quotes.\"\n            },\n            \"postalCode\": {\n                regex: \"Need a valid Postal Code eh!\"\n            },\n            \"zipCode\": {\n                regex: \"Going to need a valid Zip code.\"\n            }\n        }\n    });\n\n    /*** form submission ***/\n    $contactForm.on('submit', function (event) {\n        event.preventDefault();\n        $.ajax({\n            url: '/addUser',\n            type: 'POST',\n            data: $(this).serialize(),\n            success: function success(data) {\n                console.log('got the data into express!');\n                $contactForm.trigger('reset');\n            },\n            error: function error() {\n                console.log('still got an error');\n            }\n\n        });\n    });\n});\n\n},{\"./checkCountry\":1,\"./scroll\":3,\"./validateRules\":4}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nexports['default'] = scroll;\n\nfunction scroll($) {\n    $('html, body').animate({\n        scrollTop: $($.attr(this, 'href')).offset().top\n    }, 1000);\n    return false;\n}\n\nmodule.exports = exports['default'];\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports[\"default\"] = {\n    rules: {\n        \"name\": {\n            required: true\n        },\n        \"email\": {\n            required: true,\n            email: true\n        },\n        \"address\": {\n            regex: /^(:?\\d{2,}-?)?\\d{2,}\\s[a-z]+\\s[a-z]+\\.?$/i\n        },\n        \"postal-code\": {\n            regex: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJKLMNPRSTVWXYZ]( )?\\d[ABCEGHJKLMNPRSTVWXYZ]\\d$/i\n        },\n        \"zip-code\": {\n            regex: /^\\d{5}$/\n        }\n    },\n    messages: {\n        \"name\": {\n            required: \"Please enter your name, as it is required to submit.\"\n        },\n        \"email\": {\n            required: \"Please enter a valid email address; also required for submission.\"\n        },\n        \"address\": {\n            regex: \"Address should have number first then street name. If apartment then add unit number to beginning of street number followed by '-' with no single quotes.\"\n        },\n        \"postal-code\": {\n            regex: \"Need a valid Postal Code eh!\"\n        },\n        \"zip-code\": {\n            regex: \"Going to need a valid Zip code.\"\n        }\n    }\n};\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[2])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}